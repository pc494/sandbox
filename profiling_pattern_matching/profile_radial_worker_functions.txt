Timer unit: 1e-06 s

Total time: 0.191122 s
File: profile_radial_worker_functions.py
Function: radial_average at line 32

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    32                                           @profile
    33                                           def radial_average(z, center):
    34       500        32435     64.9     17.0      y, x = np.indices(z.shape)
    35       500        90474    180.9     47.3      r = np.sqrt((x - center[1])**2 + (y - center[0])**2)
    36       500        19139     38.3     10.0      r = (r+0.5).astype(np.int)
    37                                           
    38       500        25114     50.2     13.1      tbin = np.bincount(r.ravel(), z.ravel())
    39       500        20168     40.3     10.6      nr = np.bincount(r.ravel())
    40       500         3351      6.7      1.8      averaged = tbin / nr
    41                                           
    42       500          441      0.9      0.2      return averaged

Total time: 46.5441 s
File: profile_radial_worker_functions.py
Function: as_signal at line 43

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    43                                           @profile
    44                                           def as_signal(z, size, sigma, max_r):
    45       500          518      1.0      0.0      dp_dat = 0
    46       500        23210     46.4      0.0      l = np.linspace(-max_r, max_r, size)
    47       500        66224    132.4      0.1      x, y = np.meshgrid(l, l)
    48       500        22766     45.5      0.0      coords = z.coordinates[:, :2]
    49       500     33892422  67784.8     72.8      g = Expression(_GAUSSIAN2D_EXPR, 'Gaussian2D', module='numexpr')
    50     14046       159644     11.4      0.3      for (cx, cy), intensity in zip(coords, z.intensities):
    51     13546       552658     40.8      1.2          g.intensity.value = intensity
    52     13546       218299     16.1      0.5          g.sigma.value = sigma
    53     13546       321589     23.7      0.7          g.cx.value = cx
    54     13546       305266     22.5      0.7          g.cy.value = cy
    55     13546      8339842    615.7     17.9          dp_dat += g.function(x, y)
    56                                           
    57       500      2427908   4855.8      5.2      dp = ElectronDiffraction(dp_dat)
    58       500       213112    426.2      0.5      dp.set_calibration(2*max_r/size)
    59                                           
    60       500          667      1.3      0.0      return dp

