Timer unit: 1e-06 s

Total time: 0.141833 s
File: profile_radial_worker_functions.py
Function: radial_average at line 32

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    32                                           @profile
    33                                           def radial_average(z, center):
    34       500        20832     41.7     14.7      y, x = np.indices(z.shape)
    35       500        69042    138.1     48.7      r = np.sqrt((x - center[1])**2 + (y - center[0])**2)
    36       500        14663     29.3     10.3      r = (r+0.5).astype(np.int)
    37                                           
    38       500        19014     38.0     13.4      tbin = np.bincount(r.ravel(), z.ravel())
    39       500        15455     30.9     10.9      nr = np.bincount(r.ravel())
    40       500         2475      5.0      1.7      averaged = tbin / nr
    41                                           
    42       500          352      0.7      0.2      return averaged

Total time: 2.35393 s
File: profile_radial_worker_functions.py
Function: as_pure_peaks at line 67

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    67                                           @profile
    68                                           def as_pure_peaks(z,size,max_r):
    69       500        17283     34.6      0.7      l = np.linspace(-max_r, max_r, size)
    70       500        15283     30.6      0.6      coords = z.coordinates[:, :2]
    71       500         3931      7.9      0.2      signal = np.zeros([size,size])
    72     14046        40922      2.9      1.7      for x,y in coords:
    73     13546       299606     22.1     12.7          x_up,y_up = np.sum(l < x),np.sum(l < y) # when x > l we have overshot slightly, 
    74     13546        55763      4.1      2.4          x_num,y_num = which_edge(l,x,x_up),which_edge(l,y,y_up)
    75                                                   ## next fix the intensity
    76     13546        22149      1.6      0.9          signal[x_num,y_num] += 1
    77       500      1741106   3482.2     74.0      dp = ElectronDiffraction(signal)
    78       500       157425    314.9      6.7      dp.set_calibration(2*max_r/size)
    79                                               
    80       500          459      0.9      0.0      return dp

